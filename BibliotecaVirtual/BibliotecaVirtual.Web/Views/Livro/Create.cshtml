@model BibliotecaVirtual.Controllers.LivroController.ObjetoRetorno

@{
    ViewBag.Title = "Criação";
}
<br />
<br />
<br />
<h2>Novo Livro</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cadastro de Livros</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2">Título</div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Editora</div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Editora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Editora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Edição</div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Edicao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edicao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Ano</div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.AnoPublicacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnoPublicacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Valor</div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                Autores <br />
                <i>Separados por vírgula (,)</i>
            </div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Autores, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                Assuntos <br />
                <i>Separados por vírgula (,)</i>
            </div>
            <div class="col-md-10 form-group has-success">
                @Html.EditorFor(model => model.Assuntos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-fill btn-success" />
            </div>
        </div>
    </div>
}

<div class="btn btn-simple btn-info">
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
